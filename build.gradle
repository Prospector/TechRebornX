import net.fabricmc.loom.LoomGradlePlugin

buildscript {
	repositories {
		jcenter()
		maven {
			name = 'Fabric'
			url = 'http://maven.modmuss50.me/'
		}
	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.2.0-SNAPSHOT"
	}
}

plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
}

apply plugin: LoomGradlePlugin
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "team.reborn.techrebornx"
archivesBaseName = "TechRebornX"
version = "1.0.0"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = version + "-" + "${System.getenv().BUILD_NUMBER}"
}

minecraft {
}

dependencies {
	minecraft "com.mojang:minecraft:19w12b"
	mappings "net.fabricmc:yarn:19w12b.3"
	modCompile "net.fabricmc:fabric-loader:0.3.7.109"
	modCompile "net.fabricmc:fabric:0.2.5.114"
}

processResources {
	from(sourceSets.main.resources.srcDirs) {
		include 'fabric.mod.json'
		expand version: project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude 'fabric.mod.json'
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			//This is used when the build is done on a slave node
			if (project.hasProperty('mavenPass')) {
				println 'Uploading to remote Maven Repo'
				repository(url: "http://mavenupload.modmuss50.me/") {
					authentication(userName: "buildslave", password: project.getProperty('mavenPass'))
				}
			} else {
				//this is when the build is executed on the master node
				println 'Uploading to local Maven Repo'
				repository(url: "file:///var/www/maven/")
			}
			pom {
				groupId = project.group
				version = project.version
				artifactId = project.archivesBaseName
				project {
					name project.archivesBaseName
					packaging 'jar'
					description project.archivesBaseName
					url 'https://github.com/Prospector/Refinements'
					scm {
						url 'https://github.com/Prospector/Refinements'
						connection 'scm:git:git@github.com:Prospector/Refinements.git'
						developerConnection 'scm:git:git@github.com:Prospector/Refinements.git'
					}
				}
			}
		}
	}
}