package team.reborn.techrebornx;

import net.fabricmc.api.ModInitializer;
import net.fabricmc.fabric.api.client.itemgroup.FabricItemGroupBuilder;
import net.fabricmc.fabric.api.client.screen.ScreenProviderRegistry;
import net.fabricmc.fabric.api.container.ContainerProviderRegistry;
import net.minecraft.block.Block;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.block.BlockItem;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;
import team.reborn.techrebornx.block.SlotMachineBlock;
import team.reborn.techrebornx.client.screen.SlotMachineScreen;
import team.reborn.techrebornx.container.SlotMachineContainer;

public class TechRebornX implements ModInitializer {
	public static final String MOD_ID = "techrebornx";

	public static boolean didFirstOpen = false;
	public static int waitABit = 0;

	public static final String ITEMS = "cloaking_device\n"
		+ "lapotronic_orbpack\n"
		+ "lithium_batpack\n"
		+ "energy_crystal\n"
		+ "energy_crystal_empty\n"
		+ "lapotronic_orb\n"
		+ "lapotronic_orb_empty\n"
		+ "lapotron_crystal\n"
		+ "lapotron_crystal_empty\n"
		+ "lithium_battery\n"
		+ "lithium_battery_empty\n"
		+ "re_battery\n"
		+ "re_battery_empty\n"
		+ "copper\n"
		+ "glassfiber\n"
		+ "gold\n"
		+ "hv\n"
		+ "insulatedcopper\n"
		+ "insulatedgold\n"
		+ "insulatedhv\n"
		+ "superconductor\n"
		+ "tin\n"
		+ "cell_base\n"
		+ "cell_cover\n"
		+ "cell_empty\n"
		+ "cell_fluid\n"
		+ "almandine_dust\n"
		+ "aluminum_dust\n"
		+ "andesite_dust\n"
		+ "andradite_dust\n"
		+ "ashes_dust\n"
		+ "basalt_dust\n"
		+ "bauxite_dust\n"
		+ "brass_dust\n"
		+ "bronze_dust\n"
		+ "calcite_dust\n"
		+ "charcoal_dust\n"
		+ "chrome_dust\n"
		+ "cinnabar_dust\n"
		+ "clay_dust\n"
		+ "coal_dust\n"
		+ "copper_dust\n"
		+ "dark_ashes_dust\n"
		+ "diamond_dust\n"
		+ "diorite_dust\n"
		+ "electrum_dust\n"
		+ "emerald_dust\n"
		+ "ender_eye_dust\n"
		+ "ender_pearl_dust\n"
		+ "endstone_dust\n"
		+ "flint_dust\n"
		+ "galena_dust\n"
		+ "gold_dust\n"
		+ "granite_dust\n"
		+ "grossular_dust\n"
		+ "invar_dust\n"
		+ "iron_dust\n"
		+ "lazurite_dust\n"
		+ "lead_dust\n"
		+ "magnesium_dust\n"
		+ "manganese_dust\n"
		+ "marble_dust\n"
		+ "netherrack_dust\n"
		+ "nickel_dust\n"
		+ "obsidian_dust\n"
		+ "olivine_dust\n"
		+ "peridot_dust\n"
		+ "phosphorous_dust\n"
		+ "platinum_dust\n"
		+ "pyrite_dust\n"
		+ "pyrope_dust\n"
		+ "red_garnet_dust\n"
		+ "ruby_dust\n"
		+ "saltpeter_dust\n"
		+ "sapphire_dust\n"
		+ "saw_dust_dust\n"
		+ "silver_dust\n"
		+ "sodalite_dust\n"
		+ "spessartine_dust\n"
		+ "sphalerite_dust\n"
		+ "steel_dust\n"
		+ "sulfur_dust\n"
		+ "tin_dust\n"
		+ "titanium_dust\n"
		+ "tungsten_dust\n"
		+ "uvarovite_dust\n"
		+ "yellow_garnet_dust\n"
		+ "zinc_dust\n"
		+ "peridot\n"
		+ "red_garnet\n"
		+ "ruby\n"
		+ "sapphire\n"
		+ "yellow_garnet\n"
		+ "advanced_alloy_ingot\n"
		+ "aluminum_ingot\n"
		+ "brass_ingot\n"
		+ "bronze_ingot\n"
		+ "chrome_ingot\n"
		+ "copper_ingot\n"
		+ "electrum_ingot\n"
		+ "hot_tungstensteel_ingot\n"
		+ "invar_ingot\n"
		+ "iridium_alloy_ingot\n"
		+ "iridium_ingot\n"
		+ "lead_ingot\n"
		+ "mixed_metal_ingot\n"
		+ "nickel_ingot\n"
		+ "platinum_ingot\n"
		+ "refined_iron_ingot\n"
		+ "silver_ingot\n"
		+ "steel_ingot\n"
		+ "tin_ingot\n"
		+ "titanium_ingot\n"
		+ "tungstensteel_ingot\n"
		+ "tungsten_ingot\n"
		+ "zinc_ingot\n"
		+ "manual\n"
		+ "missing_recipe\n"
		+ "rubber_sapling\n"
		+ "scrapbox\n"
		+ "uu_matter\n"
		+ "aluminum_nugget\n"
		+ "brass_nugget\n"
		+ "bronze_nugget\n"
		+ "chrome_nugget\n"
		+ "copper_nugget\n"
		+ "diamond_nugget\n"
		+ "electrum_nugget\n"
		+ "hot_tungstensteel_nugget\n"
		+ "invar_nugget\n"
		+ "iridium_nugget\n"
		+ "iron_nugget\n"
		+ "lead_nugget\n"
		+ "nickel_nugget\n"
		+ "platinum_nugget\n"
		+ "refined_iron_nugget\n"
		+ "silver_nugget\n"
		+ "steel_nugget\n"
		+ "tin_nugget\n"
		+ "titanium_nugget\n"
		+ "tungstensteel_nugget\n"
		+ "tungsten_nugget\n"
		+ "zinc_nugget\n"
		+ "advanced_circuit\n"
		+ "carbon_fiber\n"
		+ "carbon_mesh\n"
		+ "computer_monitor\n"
		+ "coolant_simple\n"
		+ "coolant_six\n"
		+ "coolant_triple\n"
		+ "cupronickel_heating_coil\n"
		+ "data_control_circuit\n"
		+ "data_orb\n"
		+ "data_storage_circuit\n"
		+ "depleted_cell\n"
		+ "diamond_grinding_head\n"
		+ "diamond_saw_blade\n"
		+ "double_depleted_cell\n"
		+ "double_plutonium_cell\n"
		+ "double_thorium_cell\n"
		+ "double_uranium_cell\n"
		+ "electronic_circuit\n"
		+ "energy_flow_circuit\n"
		+ "helium_coolant_simple\n"
		+ "helium_coolant_six\n"
		+ "helium_coolant_triple\n"
		+ "iridium_neutron_reflector\n"
		+ "kanthal_heating_coil\n"
		+ "machine_parts\n"
		+ "nak_coolant_simple\n"
		+ "nak_coolant_six\n"
		+ "nak_coolant_triple\n"
		+ "neutron_reflector\n"
		+ "nichrome_heating_coil\n"
		+ "plutonium_cell\n"
		+ "quad_depleted_cell\n"
		+ "quad_plutonium_cell\n"
		+ "quad_thorium_cell\n"
		+ "quad_uranium_cell\n"
		+ "rubber\n"
		+ "sap\n"
		+ "scrap\n"
		+ "super_conductor\n"
		+ "thick_neutron_reflector\n"
		+ "thorium_cell\n"
		+ "tungsten_grinding_head\n"
		+ "uranium_cell\n"
		+ "advanced_alloy_plate\n"
		+ "aluminum_plate\n"
		+ "brass_plate\n"
		+ "bronze_plate\n"
		+ "carbon_plate\n"
		+ "chrome_plate\n"
		+ "coal_plate\n"
		+ "copper_plate\n"
		+ "diamond_plate\n"
		+ "electrum_plate\n"
		+ "emerald_plate\n"
		+ "gold_plate\n"
		+ "invar_plate\n"
		+ "iridium_alloy_plate\n"
		+ "iridium_plate\n"
		+ "iron_plate\n"
		+ "lapis_plate\n"
		+ "lazurite_plate\n"
		+ "lead_plate\n"
		+ "magnalium_plate\n"
		+ "nickel_plate\n"
		+ "obsidian_plate\n"
		+ "peridot_plate\n"
		+ "platinum_plate\n"
		+ "redstone_plate\n"
		+ "red_garnet_plate\n"
		+ "refined_iron_plate\n"
		+ "ruby_plate\n"
		+ "sapphire_plate\n"
		+ "silicon_plate\n"
		+ "silver_plate\n"
		+ "steel_plate\n"
		+ "tin_plate\n"
		+ "titanium_plate\n"
		+ "tungstensteel_plate\n"
		+ "tungsten_plate\n"
		+ "wood_plate\n"
		+ "yellow_garnet_plate\n"
		+ "zinc_plate\n"
		+ "almandine_smalldust\n"
		+ "aluminum_smalldust\n"
		+ "andesite_smalldust\n"
		+ "andradite_smalldust\n"
		+ "ashes_smalldust\n"
		+ "basalt_smalldust\n"
		+ "bauxite_smalldust\n"
		+ "brass_smalldust\n"
		+ "bronze_smalldust\n"
		+ "calcite_smalldust\n"
		+ "charcoal_smalldust\n"
		+ "chrome_smalldust\n"
		+ "cinnabar_smalldust\n"
		+ "clay_smalldust\n"
		+ "coal_smalldust\n"
		+ "copper_smalldust\n"
		+ "dark_ashes_smalldust\n"
		+ "diamond_smalldust\n"
		+ "diorite_smalldust\n"
		+ "electrum_smalldust\n"
		+ "emerald_smalldust\n"
		+ "ender_eye_smalldust\n"
		+ "ender_pearl_smalldust\n"
		+ "endstone_smalldust\n"
		+ "flint_smalldust\n"
		+ "galena_smalldust\n"
		+ "glowstone_smalldust\n"
		+ "gold_smalldust\n"
		+ "granite_smalldust\n"
		+ "grossular_smalldust\n"
		+ "invar_smalldust\n"
		+ "iron_smalldust\n"
		+ "lazurite_smalldust\n"
		+ "lead_smalldust\n"
		+ "magnesium_smalldust\n"
		+ "manganese_smalldust\n"
		+ "marble_smalldust\n"
		+ "netherrack_smalldust\n"
		+ "nickel_smalldust\n"
		+ "obsidian_smalldust\n"
		+ "olivine_smalldust\n"
		+ "peridot_smalldust\n"
		+ "phosphorous_smalldust\n"
		+ "platinum_smalldust\n"
		+ "pyrite_smalldust\n"
		+ "pyrope_smalldust\n"
		+ "redstone_smalldust\n"
		+ "red_garnet_smalldust\n"
		+ "ruby_smalldust\n"
		+ "saltpeter_smalldust\n"
		+ "sapphire_smalldust\n"
		+ "saw_dust_smalldust\n"
		+ "silver_smalldust\n"
		+ "sodalite_smalldust\n"
		+ "spessartine_smalldust\n"
		+ "sphalerite_smalldust\n"
		+ "steel_smalldust\n"
		+ "sulfur_smalldust\n"
		+ "tin_smalldust\n"
		+ "titanium_smalldust\n"
		+ "tungsten_smalldust\n"
		+ "uvarovite_smalldust\n"
		+ "yellow_garnet_smalldust\n"
		+ "zinc_smalldust\n"
		+ "advanced_chainsaw\n"
		+ "advanced_chainsaw_animated\n"
		+ "advanced_drill\n"
		+ "advanced_jackhammer\n"
		+ "bronze_axe\n"
		+ "bronze_boots\n"
		+ "bronze_chestplate\n"
		+ "bronze_helmet\n"
		+ "bronze_hoe\n"
		+ "bronze_leggings\n"
		+ "bronze_pickaxe\n"
		+ "bronze_spade\n"
		+ "bronze_sword\n"
		+ "debug\n"
		+ "diamond_chainsaw\n"
		+ "diamond_chainsaw_animated\n"
		+ "diamond_drill\n"
		+ "diamond_jackhammer\n"
		+ "electric_treetap\n"
		+ "electric_wrench\n"
		+ "frequency_transmitter\n"
		+ "frequency_transmitter_coords\n"
		+ "nanosaber_low\n"
		+ "nanosaber_off\n"
		+ "nanosaber_on\n"
		+ "omni_tool\n"
		+ "peridot_axe\n"
		+ "peridot_boots\n"
		+ "peridot_chestplate\n"
		+ "peridot_helmet\n"
		+ "peridot_hoe\n"
		+ "peridot_leggings\n"
		+ "peridot_pickaxe\n"
		+ "peridot_spade\n"
		+ "peridot_sword\n"
		+ "rock_cutter\n"
		+ "ruby_axe\n"
		+ "ruby_boots\n"
		+ "ruby_chestplate\n"
		+ "ruby_helmet\n"
		+ "ruby_hoe\n"
		+ "ruby_leggings\n"
		+ "ruby_pickaxe\n"
		+ "ruby_spade\n"
		+ "ruby_sword\n"
		+ "sapphire_axe\n"
		+ "sapphire_boots\n"
		+ "sapphire_chestplate\n"
		+ "sapphire_helmet\n"
		+ "sapphire_hoe\n"
		+ "sapphire_leggings\n"
		+ "sapphire_pickaxe\n"
		+ "sapphire_spade\n"
		+ "sapphire_sword\n"
		+ "steel_chainsaw\n"
		+ "steel_chainsaw_animated\n"
		+ "steel_drill\n"
		+ "steel_jackhammer\n"
		+ "treetap\n"
		+ "wrench\n"
		+ "ejection_upgrade\n"
		+ "energy_storage_upgrade\n"
		+ "injection_upgrade\n"
		+ "overclocker_upgrade\n"
		+ "range_upgrade\n"
		+ "superconductor\n"
		+ "transformer_upgrade\n"
		+ "upgradebackingtemplate";

	public static final Identifier SLOT_MACHINE_CONTAINER = new Identifier(TechRebornX.MOD_ID, "slot_machine");
	public static Block slotMachine;

	static {

	}

	private static Block register(String name, Block block, ItemGroup tab) {
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, name), block);
		BlockItem item = new BlockItem(block, new Item.Settings().itemGroup(tab));
		item.registerBlockItemMap(Item.BLOCK_ITEM_MAP, item);
		register(name, item);
		return block;
	}

	private static Item register(String name, Item item) {
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, name), item);
		return item;

	}

	@Override
	public void onInitialize() {
		ItemGroup group = FabricItemGroupBuilder.build(new Identifier(MOD_ID, MOD_ID), () -> Registry.ITEM.get(new Identifier(MOD_ID, "advanced_chainsaw")).getDefaultStack());
		slotMachine = register("slot_machine", new SlotMachineBlock(), group);
		for (String name : ITEMS.split("\n")) {
			register(name, new Item(new Item.Settings().itemGroup(group)));
		}
		ContainerProviderRegistry.INSTANCE.registerFactory(SLOT_MACHINE_CONTAINER, (syncId, identifier, player, buf) -> new SlotMachineContainer(syncId, player));
		ScreenProviderRegistry.INSTANCE.registerFactory(SLOT_MACHINE_CONTAINER, container -> new SlotMachineScreen((SlotMachineContainer) container));
	}
}
